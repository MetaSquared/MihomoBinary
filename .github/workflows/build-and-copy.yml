name: Auto Build Mihomo

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC午夜检查
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch_pair:
          - arch: armv7
            goarch: arm
            goarm: 7
            bin_dir: bin32
          - arch: arm64
            goarch: arm64
            goarm: ""
            bin_dir: bin64
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest MetaCubeX release
      id: meta-release
      run: |
        LATEST_TAG=$(curl -sL https://api.github.com/repos/MetaCubeX/mihomo/releases/latest | jq -r '.tag_name')
        echo "META_VERSION=${LATEST_TAG}" >> $GITHUB_ENV

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Install UPX
      run: |
        sudo apt-get update
        sudo apt-get install -y upx

    - name: Download source
      run: |
        wget https://github.com/MetaCubeX/mihomo/archive/refs/tags/${{ env.META_VERSION }}.tar.gz
        tar -xzf ${{ env.META_VERSION }}.tar.gz
        mv mihomo-${META_VERSION#v} source

    - name: Build ${{ matrix.arch_pair.arch }}
      env:
        GOOS: linux
        GOARCH: ${{ matrix.arch_pair.goarch }}
        GOARM: ${{ matrix.arch_pair.goarm }}
      run: |
        cd source
        BUILDTIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        
        CGO_ENABLED=0 go build \
          -trimpath \
          -ldflags "-X 'github.com/metacubex/mihomo/constant.Version=${{ env.META_VERSION }}' \
                    -X 'github.com/metacubex/mihomo/constant.BuildTime=$BUILDTIME' \
                    -w -s -buildid=linux-${{ matrix.arch_pair.arch }}" \
          -o ../clash
        
        cd ..
        upx --lzma --best clash

        mkdir -p MerlinClash2/${{ matrix.arch_pair.bin_dir }}
        mv clash MerlinClash2/${{ matrix.arch_pair.bin_dir }}/
        chmod +x MerlinClash2/${{ matrix.arch_pair.bin_dir }}/clash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: MerlinClash2/
        retention-days: 1

  commit-and-push:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: binaries
        path: MerlinClash2/

    - name: Get version
      run: echo "META_VERSION=$(cat MerlinClash2/version.txt)" >> $GITHUB_ENV

    - name: Update version file
      run: echo "${{ env.META_VERSION }}" > MerlinClash2/version.txt

    - name: Commit changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add MerlinClash2/
        
        # 拉取最新更改并解决冲突
        git pull origin main --rebase
        
        if git diff-index --quiet HEAD --; then
          echo "No changes to commit"
        else
          git commit -m "Update to ${{ env.META_VERSION }}"
          git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
