name: Check and Update Release

on:
  schedule:
    - cron: '0 */6 * * *' # 每6小时检查一次
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest release version
      id: get_version
      run: |
        LATEST_VERSION=$(curl -s https://api.github.com/repos/MetaCubeX/mihomo/releases/latest | jq -r '.tag_name')
        echo "latest_version=$LATEST_VERSION" >> $GITHUB_ENV

    - name: Read current version
      id: current_version
      run: |
        if [ -f version.txt ]; then
          CURRENT_VERSION=$(cat version.txt)
        else
          CURRENT_VERSION="v0.0.0"
        fi
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_ENV

    - name: Compare versions
      id: compare_versions
      run: |
        if [[ "${{ env.latest_version }}" > "${{ env.current_version }}" ]]; then
          echo "update_available=true" >> $GITHUB_ENV
          echo "new_version=${{ env.latest_version }}" >> $GITHUB_ENV
        else
          echo "update_available=false" >> $GITHUB_ENV
        fi

    - name: Process new release
      if: env.update_available == 'true'
      run: |
        # 安装依赖
        sudo apt-get update
        sudo apt-get install -y upx

        # 创建工作目录
        mkdir -p artifacts

        # 下载并处理每个架构
        for ARCH in arm64 armv7; do
          # 下载文件并重命名为 mihomo-linux-${ARCH}.gz
          URL="https://github.com/MetaCubeX/mihomo/releases/download/${{ env.latest_version }}/mihomo-linux-${ARCH}-${{ env.latest_version }}.gz"
          wget -O "mihomo-linux-${ARCH}.gz" "$URL"
          
          # 解压文件
          gzip -d "mihomo-linux-${ARCH}.gz"  # 解压后会生成 mihomo-linux-${ARCH}
          
          # 添加可执行权限
          chmod +x "mihomo-linux-${ARCH}"
          
          # UPX压缩
          upx --lzma --best "mihomo-linux-${ARCH}"
          
          # 打包
          tar czvf artifacts/mihomo-linux-${ARCH}-${{ env.latest_version }}.tar.gz "mihomo-linux-${ARCH}"
          
          # 清理临时文件
          rm "mihomo-linux-${ARCH}"
        done

    - name: Create new release and upload assets
      if: env.update_available == 'true'
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.latest_version }}
        name: "Compressed ${{ env.latest_version }}"
        body: "Pre-compressed binaries using UPX --lzma --best"
        draft: false
        prerelease: false
        files: |
          artifacts/mihomo-linux-arm64-${{ env.latest_version }}.tar.gz
          artifacts/mihomo-linux-armv7-${{ env.latest_version }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update version file
      if: env.update_available == 'true'
      run: |
        echo "${{ env.latest_version }}" > version.txt
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add version.txt
        git commit -m "Update to ${{ env.latest_version }}"
        git push
